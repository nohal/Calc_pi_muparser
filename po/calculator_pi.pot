# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#: src/calculatorgui_impl.cpp:87
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: calculator_pi 3.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-10-29 19:01+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: src/calculator_pi.cpp:92 src/calculator_pi.cpp:153 src/calculatorgui.h:56
msgid "Calculator"
msgstr ""

#: src/calculator_pi.cpp:158
msgid "Symbolic Calculator Plugin"
msgstr ""

#: src/calculator_pi.cpp:163
msgid ""
"This is a calculator & mathematical expression parsing plugin.\n"
"Would you like to know your hull speed?"
msgstr ""

#: src/calculator_pi.cpp:253
msgid "Calculator Preferences"
msgstr ""

#: src/calculatorgui_impl.h:45 src/calculatorgui.h:77
msgid "Calculator preferences"
msgstr ""

#: src/calculatorgui_impl.h:51
msgid "Calculator by SaltyPaws"
msgstr ""

#: src/calculatorgui_impl.cpp:85
msgid "Error"
msgstr ""

#: src/calculatorgui_impl.cpp:85
msgid "Ans"
msgstr ""

#: src/calculatorgui_impl.cpp:95
msgid "Calculator output:"
msgstr ""

#: src/calculatorgui.cpp:33
msgid "Calculate"
msgstr ""

#: src/calculatorgui.cpp:39
msgid "Help"
msgstr ""

#: src/calculatorgui.cpp:54
msgid ""
"Use up and down keys, while cursor is in input box, to recall previous input "
"and results.\n"
"Examples of expression that work in the calculator are: (comments are in "
"brackets, some results depend on other example calculations):\n"
"=========\n"
"Hull speed:\n"
"    LWL=48\t\t\t\t\t(water line lenght in feet)\n"
"    vhull=1.34*LWL^(1/2)\t(hull speed in knots)\n"
"\n"
"Conversions:\n"
"    ftm=0.3048\t\t\t\t(feet to meters)\n"
"    km_to_nm=0.539957\t(Kilometers to nautical Mile)\n"
"    ftm*LWL\t\t\t\t(waterline length in meters)\n"
"\n"
"Distance to horizon\n"
"    R=6378.1*1000\t\t\t(Radius of the earth in m)\n"
"    H=2.5\t\t\t\t\t(Height of the eye above sea-level in m)\n"
"    d = R * acos(R/(R + h))\t(Distance to horizon in m)   \n"
"    ans*km_to_nm\t\t\t(Distance to horizon in nm)\n"
"\n"
"Distance to lighthouse\n"
"    H1=200\t\t\t\t\t(height of lighthouse in m)\n"
"    d1 = R*acos(R/(R + H1))(Distance to horizon in m)\n"
"    distance=d1+d\t\t\t(visibility range of lighthouse in m)\n"
"\n"
"Operators:\n"
"          & | << >> \n"
"          = <> < > <= >=\n"
"          + -\n"
"          * / % ||\n"
"          ^ (NB use ^(1/2) for square root)\n"
"          ! (Factorial)\n"
" \n"
"Functions:\n"
"          Abs, Exp, Sign, Sqrt, Log, Log10\n"
"          Sin, Cos, Tan, ASin, ACos, Atan (default entry is in radians use e."
"g. sin(dtr*90) to calculate in degree)\n"
"          Factorial\n"
" \n"
"Variables:\n"
"          Pi, e\n"
"\t  dtr is the conversion factor from degrees to radians\n"
"\t  Ans is the result of the previous calulation\t\t\n"
"          you can define your own variables (e.g. myvariable=10/8*cos(dtr*90) "
"or yourvariable=Ans)"
msgstr ""

#: src/calculatorgui.cpp:110
msgid "General settings"
msgstr ""

#: src/calculatorgui.cpp:120
msgid "Opacity"
msgstr ""
